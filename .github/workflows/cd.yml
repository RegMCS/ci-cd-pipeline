name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: regmcs/ci-cd-pipeline

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.version || 'latest' }}
            type=sha,prefix=build-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        run: |
          echo "🚀 Deploying to EC2 server..."
          echo "Image: ${{ steps.meta.outputs.tags }}"

          # Set up SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          # Copy deployment script to EC2
          scp deploy.sh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/tmp/deploy.sh

          # Run deployment on EC2
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            chmod +x /tmp/deploy.sh
            export GITHUB_REPOSITORY="${{ github.repository }}"
            export GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
            export GITHUB_ACTOR="${{ github.actor }}"
            export DB_HOST="${{ secrets.DB_HOST }}"
            export DB_PORT="${{ secrets.DB_PORT }}"
            export DB_NAME="${{ secrets.DB_NAME }}"
            export DB_USER="${{ secrets.DB_USER }}"
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_MIN_CONN="${{ secrets.DB_MIN_CONN }}"
            export DB_MAX_CONN="${{ secrets.DB_MAX_CONN }}"
            /tmp/deploy.sh
          EOF

      - name: Run Health Check
        run: |
          echo "🔍 Running health check..."
          # Test the deployed application
          curl -f "http://${{ secrets.EC2_HOST }}:8000/api/v1/health" || {
            echo "❌ Health check failed!"
            exit 1
          }
          echo "✅ Health check passed!"

      - name: Notify Deployment Success
        run: |
          echo "✅ Successfully deployed!"
          # Add notification logic here (Slack, email, etc.)
