name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (optional, leave empty for latest)"
        required: false
        type: string
        default: ""

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.version || 'latest' }}
            type=sha,prefix=build-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Server
        run: |
          echo "üöÄ Deploying to server..."
          echo "Image: ${{ steps.meta.outputs.tags }}"
          # Add your deployment commands here
          # Example: 
          # - SSH to EC2 and pull new image
          # - docker-compose down && docker-compose up -d
          # - kubectl apply -f k8s/

      - name: Run Health Check
        run: |
          echo "üîç Running health check..."
          # Add health check commands here
          # Example: curl -f https://your-domain.com/health

      - name: Notify Deployment Success
        run: |
          echo "‚úÖ Successfully deployed!"
          # Add notification logic here (Slack, email, etc.)
